[{"D:\\GitHub Projects\\StarlabsTask\\front\\src\\index.js":"1","D:\\GitHub Projects\\StarlabsTask\\front\\src\\App.js":"2","D:\\GitHub Projects\\StarlabsTask\\front\\src\\store.js":"3","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Register\\index.jsx":"4","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Login\\index.jsx":"5","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Home\\index.jsx":"6","D:\\GitHub Projects\\StarlabsTask\\front\\src\\reducers\\index.js":"7","D:\\GitHub Projects\\StarlabsTask\\front\\src\\reducers\\auth.js":"8","D:\\GitHub Projects\\StarlabsTask\\front\\src\\reducers\\message.js":"9","D:\\GitHub Projects\\StarlabsTask\\front\\src\\actions\\types.js":"10","D:\\GitHub Projects\\StarlabsTask\\front\\src\\actions\\auth.js":"11","D:\\GitHub Projects\\StarlabsTask\\front\\src\\api\\login.js":"12","D:\\GitHub Projects\\StarlabsTask\\front\\src\\api\\register.js":"13","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Header\\index.jsx":"14","D:\\GitHub Projects\\StarlabsTask\\front\\src\\api\\products.js":"15","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\CreateProduct\\index.jsx":"16","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\EditProduct\\index.jsx":"17"},{"size":573,"mtime":1607376143967,"results":"18","hashOfConfig":"19"},{"size":873,"mtime":1607437582232,"results":"20","hashOfConfig":"19"},{"size":312,"mtime":1607376160144,"results":"21","hashOfConfig":"19"},{"size":10740,"mtime":1607420960253,"results":"22","hashOfConfig":"19"},{"size":5312,"mtime":1607420437454,"results":"23","hashOfConfig":"19"},{"size":4749,"mtime":1607446725261,"results":"24","hashOfConfig":"19"},{"size":166,"mtime":1606387956855,"results":"25","hashOfConfig":"19"},{"size":718,"mtime":1605446868804,"results":"26","hashOfConfig":"19"},{"size":372,"mtime":1606419994655,"results":"27","hashOfConfig":"19"},{"size":213,"mtime":1606387956852,"results":"28","hashOfConfig":"19"},{"size":977,"mtime":1607376685589,"results":"29","hashOfConfig":"19"},{"size":603,"mtime":1607377646696,"results":"30","hashOfConfig":"19"},{"size":185,"mtime":1607388557412,"results":"31","hashOfConfig":"19"},{"size":9221,"mtime":1607433748892,"results":"32","hashOfConfig":"19"},{"size":1665,"mtime":1607445072168,"results":"33","hashOfConfig":"19"},{"size":7027,"mtime":1607446981316,"results":"34","hashOfConfig":"19"},{"size":8083,"mtime":1607446968464,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"153ig0s",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\GitHub Projects\\StarlabsTask\\front\\src\\index.js",[],["76","77"],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\App.js",["78"],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\store.js",[],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Register\\index.jsx",["79","80","81","82","83","84"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link, Redirect } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addUser } from \"../../api/register\";\r\n\r\n// import {Form} from \"react-bootstrap\";\r\n// css\r\n// import \"./Register.scss\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n// import Header from \"../Header/Header\";\r\nimport { Switch } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  darkTheme: {\r\n    backgroundColor: \"#424242\",\r\n  },\r\n  image: {\r\n    // backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundImage: \"url(https://images.unsplash.com/photo-1607309843146-f60aded21e1f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=80)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n    //   theme.palette.type === \"light\"\r\n        // ? theme.palette.grey[50]\r\n        theme.palette.grey[50],\r\n        // : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#f48fb1\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const { user: currentUser, isLoggedIn } = useSelector((state) => state.auth);\r\n  const [errMessage, setErrMessage] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(false);\r\n\r\n  const [darkState, setDarkState] = useState(false);\r\n  const palletType = darkState ? \"dark\" : \"light\";\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = async (data, e) => {\r\n    const registerData = {\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      email: data.email,\r\n      password: data.password,\r\n    };\r\n\r\n    try {\r\n      const response = await addUser(registerData);\r\n      e.target.reset();\r\n      console.log(response)\r\n\r\n      // setErrMessage(response.errMessage);\r\n      // setSuccessMessage(response.successMessage);\r\n      response.errMessage ? setErrMessage(response.errMessage) : setErrMessage(false);\r\n      response.successMessage ? setSuccessMessage(response.successMessage) : setSuccessMessage(false);\r\n \r\n    } catch (e) {}\r\n  };\r\n\r\n//   useEffect(() => {}, [currentUser]);\r\n//   if (currentUser) {\r\n//     return <Redirect to={\"/\"} />;\r\n//   }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      {/* <Header /> */}\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography\r\n              style={{ marginBottom: \"20px\" }}\r\n              component=\"h1\"\r\n              variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <br />\r\n            {errMessage && <Alert severity=\"error\">{errMessage}</Alert>}\r\n            {successMessage && (\r\n              <Alert severity=\"success\">{successMessage}</Alert>\r\n            )}\r\n            <br />\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n              <TextField\r\n                // autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                // required\r\n                fullWidth\r\n                label=\"First Name\"\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                inputRef={register({ \r\n                    required: true, \r\n                    minLength: 3,\r\n                    pattern: {\r\n                        value: /^[A-Za-z\\s]+$/i,\r\n                        message: \"Name cannot contain numbers or symbols\",\r\n                    },\r\n                })}\r\n                // onChange={handleChange}\r\n              />\r\n              <p style={{ color: \"red\" }}>\r\n                &#8203;\r\n                {errors.firstName && errors.firstName.type === \"required\" && (\r\n                  <span>This field is required!</span>\r\n                )}\r\n                {errors.firstName && errors.firstName.type === \"minLength\" && (\r\n                  <span>\r\n                    This field requires minimum length of 3 characters!\r\n                  </span>\r\n                )}\r\n                {errors.firstName && errors.firstName.type === \"pattern\" && (\r\n                  <span>\r\n                    Name cannot contain numbers or symbols!\r\n                  </span>\r\n                )}\r\n              </p>\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                // required\r\n                fullWidth\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                // autoComplete=\"lname\"\r\n                inputRef={register({ \r\n                    required: true, \r\n                    minLength: 3,\r\n                    pattern: {\r\n                        value: /^[A-Za-z\\s]+$/i,\r\n                        message: \"Last Name cannot contain numbers or symbols\",\r\n                    },\r\n                })}\r\n                // onChange={handleChange}\r\n              />\r\n              <p style={{ color: \"red\" }}>\r\n                &#8203;\r\n                {errors.lastName && errors.lastName.type === \"required\" && (\r\n                  <span>This field is required!</span>\r\n                )}\r\n                {errors.lastName && errors.lastName.type === \"minLength\" && (\r\n                  <span>\r\n                    This field requires minimum length of 3 characters!\r\n                  </span>\r\n                )}\r\n                {errors.lastName && errors.lastName.type === \"pattern\" && (\r\n                  <span>\r\n                    Last Name cannot contain numbers or symbols!\r\n                  </span>\r\n                )}\r\n              </p>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                // required\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                // autoComplete=\"email\"\r\n                inputRef={register({\r\n                  required: true,\r\n                  minLength: 6,\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: \"Invalid email address\",\r\n                  },\r\n                })}\r\n                // onChange={handleChange}\r\n              />\r\n              <p style={{ color: \"red\" }}>\r\n                &#8203;\r\n                {errors.email && errors.email.type === \"required\" && (\r\n                  <span>This field is required!</span>\r\n                )}\r\n                {errors.email && errors.email.type === \"minLength\" && (\r\n                  <span>\r\n                    This field requires minimum length of 6 characters!\r\n                  </span>\r\n                )}\r\n                {errors.email && errors.email.type === \"pattern\" && (\r\n                  <span>Invalid email address!</span>\r\n                )}\r\n              </p>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                // required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                // autoComplete=\"current-password\"\r\n                inputRef={register({ \r\n                  required: true, \r\n                  minLength: 8,\r\n                  pattern: {\r\n                    value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/i,\r\n                    message: \"Password is not strong enough. You must include one lower case, one uppercase and one number!\",\r\n                  },\r\n                })}\r\n                // onChange={handleChange}\r\n              />\r\n              <p style={{ color: \"red\" }}>\r\n                &#8203;\r\n                {errors.password && errors.password.type === \"required\" && (\r\n                  <span>This field is required!</span>\r\n                )}\r\n                {errors.password && errors.password.type === \"minLength\" && (\r\n                  <span>\r\n                    This field requires minimum length of 8 characters!\r\n                  </span>\r\n                )}\r\n                {errors.password && errors.password.type === \"pattern\" && (\r\n                  <span>\r\n                    Password is not strong enough. You must include one lower case, one uppercase and one number!\r\n                  </span>\r\n                )}\r\n              </p>\r\n\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginBottom: \"15px\" }}\r\n                // className={classes.submit}\r\n                // onClick={handleSubmit}\r\n                type=\"submit\">\r\n                Register\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item>\r\n                    <Link\r\n                      to=\"/login\"\r\n                      style={{ color: \"#222\" }}\r\n                      variant=\"body2\">\r\n                      {\"Already have an account? Sign In\"}\r\n                    </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Login\\index.jsx",["85","86"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { login } from \"../../actions/auth\";\r\n\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  darkTheme: {\r\n    backgroundColor: \"#424242\",\r\n  },\r\n  image: {\r\n    // backgroundImage: \"url(https://unsplash.com/photos/7ZWVnVSaafY)\",\r\n    backgroundImage: \"url(https://images.unsplash.com/photo-1593642634443-44adaa06623a?ixlib=rb-1.2.1&ixid=MXwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1000&q=80)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      // theme.palette.type === \"light\"\r\n      //   ? theme.palette.grey[50]\r\n        // : theme.palette.grey[900],\r\n        theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#f48fb1\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const { user: currentUser, isLoggedIn } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [darkState, setDarkState] = useState(false);\r\n  const palletType = darkState ? \"light\" : \"dark\";\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n  \r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    dispatch(login(email, password))\r\n      .then(() => {})\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <br />\r\n            {/* {alertMsg} */}\r\n            {message && <Alert severity=\"error\">{message}</Alert>}\r\n            <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={loading}>\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item>\r\n                    <Link\r\n                      to=\"/register\"\r\n                      style={{ color: \"#fff\" }}\r\n                      variant=\"body2\">\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Home\\index.jsx",["87","88","89","90","91","92","93","94","95"],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\reducers\\index.js",[],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\reducers\\auth.js",["96"],"import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","D:\\GitHub Projects\\StarlabsTask\\front\\src\\reducers\\message.js",["97"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\GitHub Projects\\StarlabsTask\\front\\src\\actions\\types.js",[],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\actions\\auth.js",[],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\api\\login.js",["98"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/auth\";\r\n\r\nconst login = async (email, password) => {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + localStorage.getItem(\"user\");\r\n  return axios\r\n    .post(API_URL + \"/login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n};","D:\\GitHub Projects\\StarlabsTask\\front\\src\\api\\register.js",[],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\Header\\index.jsx",["99","100","101","102","103"],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\api\\products.js",[],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\CreateProduct\\index.jsx",["104","105","106","107","108","109","110","111","112"],"D:\\GitHub Projects\\StarlabsTask\\front\\src\\components\\EditProduct\\index.jsx",["113","114","115","116","117","118","119","120","121","122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"131","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"132","line":16,"column":8,"nodeType":"129","messageId":"130","endLine":16,"endColumn":11},{"ruleId":"127","severity":1,"message":"133","line":23,"column":10,"nodeType":"129","messageId":"130","endLine":23,"endColumn":16},{"ruleId":"127","severity":1,"message":"134","line":65,"column":9,"nodeType":"129","messageId":"130","endLine":65,"endColumn":16},{"ruleId":"127","severity":1,"message":"135","line":66,"column":17,"nodeType":"129","messageId":"130","endLine":66,"endColumn":28},{"ruleId":"127","severity":1,"message":"136","line":70,"column":21,"nodeType":"129","messageId":"130","endLine":70,"endColumn":33},{"ruleId":"127","severity":1,"message":"135","line":62,"column":17,"nodeType":"129","messageId":"130","endLine":62,"endColumn":28},{"ruleId":"127","severity":1,"message":"136","line":65,"column":21,"nodeType":"129","messageId":"130","endLine":65,"endColumn":33},{"ruleId":"127","severity":1,"message":"137","line":2,"column":23,"nodeType":"129","messageId":"130","endLine":2,"endColumn":27},{"ruleId":"127","severity":1,"message":"138","line":4,"column":23,"nodeType":"129","messageId":"130","endLine":4,"endColumn":39},{"ruleId":"127","severity":1,"message":"139","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":19},{"ruleId":"127","severity":1,"message":"140","line":5,"column":21,"nodeType":"129","messageId":"130","endLine":5,"endColumn":30},{"ruleId":"127","severity":1,"message":"141","line":5,"column":32,"nodeType":"129","messageId":"130","endLine":5,"endColumn":40},{"ruleId":"127","severity":1,"message":"142","line":5,"column":67,"nodeType":"129","messageId":"130","endLine":5,"endColumn":71},{"ruleId":"127","severity":1,"message":"143","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":23},{"ruleId":"127","severity":1,"message":"144","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":56,"column":10,"nodeType":"147","endLine":56,"endColumn":12,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":13,"column":1,"nodeType":"151","endLine":38,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":5,"column":1,"nodeType":"151","endLine":18,"endColumn":2},{"ruleId":"149","severity":1,"message":"152","line":26,"column":1,"nodeType":"151","endLine":29,"endColumn":3},{"ruleId":"127","severity":1,"message":"153","line":2,"column":31,"nodeType":"129","messageId":"130","endLine":2,"endColumn":39},{"ruleId":"127","severity":1,"message":"154","line":18,"column":10,"nodeType":"129","messageId":"130","endLine":18,"endColumn":23},{"ruleId":"127","severity":1,"message":"155","line":136,"column":11,"nodeType":"129","messageId":"130","endLine":136,"endColumn":15},{"ruleId":"127","severity":1,"message":"156","line":159,"column":9,"nodeType":"129","messageId":"130","endLine":159,"endColumn":19},{"ruleId":"127","severity":1,"message":"157","line":163,"column":9,"nodeType":"129","messageId":"130","endLine":163,"endColumn":20},{"ruleId":"127","severity":1,"message":"137","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"139","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":19},{"ruleId":"127","severity":1,"message":"140","line":6,"column":21,"nodeType":"129","messageId":"130","endLine":6,"endColumn":30},{"ruleId":"127","severity":1,"message":"141","line":6,"column":32,"nodeType":"129","messageId":"130","endLine":6,"endColumn":40},{"ruleId":"127","severity":1,"message":"158","line":6,"column":60,"nodeType":"129","messageId":"130","endLine":6,"endColumn":65},{"ruleId":"127","severity":1,"message":"143","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":23},{"ruleId":"127","severity":1,"message":"144","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":24},{"ruleId":"127","severity":1,"message":"134","line":16,"column":11,"nodeType":"129","messageId":"130","endLine":16,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":17,"column":19,"nodeType":"129","messageId":"130","endLine":17,"endColumn":30},{"ruleId":"127","severity":1,"message":"137","line":2,"column":21,"nodeType":"129","messageId":"130","endLine":2,"endColumn":25},{"ruleId":"127","severity":1,"message":"139","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":19},{"ruleId":"127","severity":1,"message":"140","line":6,"column":21,"nodeType":"129","messageId":"130","endLine":6,"endColumn":30},{"ruleId":"127","severity":1,"message":"141","line":6,"column":32,"nodeType":"129","messageId":"130","endLine":6,"endColumn":40},{"ruleId":"127","severity":1,"message":"158","line":6,"column":60,"nodeType":"129","messageId":"130","endLine":6,"endColumn":65},{"ruleId":"127","severity":1,"message":"143","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":23},{"ruleId":"127","severity":1,"message":"144","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":24},{"ruleId":"127","severity":1,"message":"134","line":17,"column":11,"nodeType":"129","messageId":"130","endLine":17,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":18,"column":19,"nodeType":"129","messageId":"130","endLine":18,"endColumn":30},{"ruleId":"145","severity":1,"message":"146","line":60,"column":8,"nodeType":"147","endLine":60,"endColumn":10,"suggestions":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Box' is defined but never used.","'Switch' is defined but never used.","'history' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setDarkState' is assigned a value but never used.","'Link' is defined but never used.","'getSingleProduct' is defined but never used.","'Container' is defined but never used.","'ListGroup' is defined but never used.","'CardDeck' is defined but never used.","'Form' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProductsList'. Either include it or remove the dependency array.","ArrayExpression",["162"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","'Redirect' is defined but never used.","'AccountCircle' is defined but never used.","'open' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'Table' is defined but never used.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"164","fix":"166"},"Update the dependencies array to be: [getProductsList]",{"range":"167","text":"168"},{"range":"169","text":"168"},[2333,2335],"[getProductsList]",[2310,2312]]